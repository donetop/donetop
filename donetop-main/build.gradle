plugins {
    id 'war'

    //https://github.com/node-gradle/gradle-node-plugin/blob/master/docs/usage.md
    id "com.github.node-gradle.node" version "3.4.0"

	id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'

	implementation 'com.mysql:mysql-connector-j:8.0.31'
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.8.1'

    implementation project(':donetop-domain')
	implementation project(':donetop-dto')
	implementation project(':donetop-enum')

    runtimeOnly 'com.h2database:h2'

	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

test {
    useJUnitPlatform()
}

node {
    download = true
    version = '14.20.0'
    npmVersion = '6.14.17'
    distBaseUrl = 'https://nodejs.org/dist'
    npmInstallCommand = 'install'
    workDir = file('../.gradle/nodejs')
    npmWorkDir = file('../.gradle/npm')
    nodeProjectDir = file('./frontend')
}

task npmBuild(type: NpmTask, dependsOn: ['npmInstall']) {
    args = ["run", "build"]
}

processResources {
	dependsOn npmBuild
}

asciidoctor {
	dependsOn test
	sourceDir 'src/main/asciidoc'
	outputDir 'build/asciidoc'
	attributes 'snippets': file('build/generated-snippets/')
}

bootJar {
	dependsOn asciidoctor
	from ("${asciidoctor.outputDir}/index.html") {
		into '/BOOT-INF/classes/static/asciidoc'
	}
}
